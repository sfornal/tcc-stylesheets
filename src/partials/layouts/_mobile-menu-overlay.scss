.mobileOverlay {
    background: $dark-gray url('/_resources/images/textures/dark-texture-1.png');
    display: none; //Default to hidden
    margin: 0;
    min-height: 100vh;
    padding: 67px 0 0;
    position: relative;
    width: 100%;

    @include bp(medium) {
        display: none; //!important; //Do we need this important?
    }

    .siteSearch {
        // layouts/_common-header.scss file as well as the declarations here
        // Note, this element is inheriting from the .siteSearch rules in the
        background: $dark-gray url('/_resources/images/textures/dark-texture-1.png');
        border-bottom: 3px solid $pure-white;
        box-shadow: 0 6px 3px -3px transparentize($pure-black, 0.8);
        position: fixed;
        z-index: z(HIGHEST);
    }

    .mobileOverlay-mainNavWrap {
        @include clearfix();
        @include font(1rem);
        // position: fixed;
        // top: 54px;
        // z-index: z(HIGHEST);
        //padding-top: 10px;
        background: $dark-gray url('/_resources/images/textures/dark-texture-1.png');
        width: 100%;

        .mainMenu,
        .quickLinks {
            display: block;

            h5 {
                @include font(1rem);
            }
        }
    }

    .mobileOverlay-sectionNavWrap {
        @include clearfix();
        @include font(1rem);
        background-color: $tcc-blue-darker;
        color: $pure-white;
        padding-bottom: 120px;
        width: 100%;

        a {
            color: inherit;
            text-decoration: none;

            &:hover,
            &:focus,
            &:active {
                outline: none;
                text-decoration: underline;
            }
        }

        .sectionNav-sectionTop {
            @include font(1.2rem, 800);
            background-color: $tcc-blue-darker;
            border-bottom: 1px solid $pure-white;
            border-top: 3px solid $pure-white;
            color: $pure-white;
            padding: 10px 20px;
            text-transform: uppercase;

            &:nth-of-type(n+2) { //To override undesired cacscade effect from common layout
                margin-top: 0;
            }
        }
    }
}

.mobileNav {
    display: block;

    ul {
        list-style-type: none;
        margin: 0;
        padding: 0;

        li {
            // border-bottom: 1px solid $light-gray;
            background-color: $nav-top-level;
            color: $nav-top-level-text;
            margin: 0;
            padding: 0;
            // &:last-child { border-bottom: 2px solid $light-gray; }

            // ul {
            //     margin-bottom: 10px;
            // }

            a {
                display: block;
                padding: 10px 10px 10px 20px;
            }
        }

        // For readability
        // scss-lint:disable MergeableSelector SelectorDepth
        li li {
            margin: 0 15px;
            padding-bottom: 0;
            // background-color: $nav-second-level;
            // color: $nav-second-level-text;
            // border-bottom: none;
            // border-top: 1px solid $light-gray;
            // &:last-child { border-bottom: none; }

            a {
                padding-left: 40px;
            }
        }

        li li li {
            margin: 0;
            // background-color: $nav-third-level;
            // color: $nav-third-level-text;
            // border-top: 1px solid $light-gray;
            //&:last-child { border-bottom: none; }

            a {
                padding-left: 60px;
            }
        }

        li li li li {
            margin: 0;
            // background-color: $nav-fourth-level;
            // color: $nav-fourth-level-text;
            // border-top: 1px solid $light-gray;
            //&:last-child { border-bottom: none; }

            a {
                padding-left: 80px;
            }
        }

        .currentPage {
            // background-color: $nav-selected;
            // color: $nav-selected-text;
            @include font($weight: 800);

            > a {
                background-color: $light-gray;
                border-left: 6px solid $tcc-green;
                padding-left: 14px;
                position: relative;
            }

            // & > a:before {
            //     content: '';
            //     position: absolute;
            //     bottom: 0;
            //     top: 0;
            //     left: 0;
            //     width: 15px;
            //     background-color: rgba(255, 255, 255, 0.6);

            //     //content: '\25b6'; //Rightwards triangle
            //     //content: '\25b8'; //Rightwards small triangle
            //     //content: '\2192'; //Rightwards arrow
            // }

            li {
                @include font($style: italic, $weight: 300);
            }
        }
    }
}

//Ignore repeated values
// scss-lint:disable DuplicateProperty PropertySortOrder
.mobileMenuButton {
    @include font($size: 14px, $weight: 900);
    -webkit-appearance: none;
    background: $tcc-burgundy;
    background: radial-gradient($tcc-burgundy, darken($tcc-burgundy, 10%));
    border: 3px solid $pure-white;
    border-radius: 30px; // Fall back value for old Android :(
    border-radius: 50%;
    bottom: 24px;
    box-shadow: 0 2px 6px -2px $shadow-dark;
    color: $pure-white;
    display: none; //Default to hidden
    height: 60px;
    margin: 0;
    padding: 0;
    position: fixed;
    right: 14px;
    text-align: center;
    vertical-align: middle;
    width: 60px;
    z-index: z(MODAL);

    @include bp(medium) {
        display: none; // !important; //Was important needed here?
    }

    &.closed {
        background: $tcc-blue;
        background: radial-gradient($tcc-blue, darken($tcc-blue, 10%));
    }

    &:hover,
    &:focus {
        background: lighten($tcc-burgundy, 10%);
        background: radial-gradient(lighten($tcc-burgundy, 10%), $tcc-burgundy);
        outline: 0;

        &.closed {
            background: lighten($tcc-blue, 10%);
            background: radial-gradient(lighten($tcc-blue, 10%), $tcc-blue);
        }
    }

    &:active {
        background: lighten($tcc-burgundy, 20%);
        background: radial-gradient(lighten($tcc-burgundy, 20%), $tcc-burgundy);
        bottom: 22px;
        box-shadow: none;

        &.closed {
            background: lighten($tcc-blue, 20%);
            background: radial-gradient(lighten($tcc-blue, 20%), $tcc-blue);
        }
    }
}
